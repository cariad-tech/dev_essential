<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--
Copyright @ 2021 VW Group. All rights reserved.
 
This Source Code Form is subject to the terms of the Mozilla
Public License, v. 2.0. If a copy of the MPL was not distributed
with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
-->
<mapping>
    <header>
        <language_version>1.00</language_version>
        <author>dev_essential team</author>
        <date_creation>2016-Mar-22</date_creation>
        <date_change>2016-Mar-22</date_change>
        <description>Mapping description generated by SiMaEditor</description>
    </header>

    <sources>
        <source name="MinimalSignal" type="MinimalStruct" />
        <source name="MinimalSignal2" type="MinimalStruct" />
        <source name="InSignal" type="InStruct" />
    </sources>

    <targets>
        <target name="OutSignal" type="OutStruct">
            <assignment to="i16Val" constant="3" />
            <assignment to="structMinimal.i8Val" constant="4"  />
            <assignment to="i32Val" from="MinimalSignal.i32Val" />
            <assignment to="i64Val" from="MinimalSignal.f32Val" />
            <assignment to="ui8Val" from="MinimalSignal.ui8Val" transformation="add2" />
            <assignment to="ui16Val" from="MinimalSignal.f32Val" transformation="add2" />
            <assignment to="f32Ary[0]" from="InSignal.f32Ary[0]" />
            <assignment to="f32Ary[1]" from="MinimalSignal.i32Val" />
            <assignment to="enumVal" from="InSignal.enumVal" />
            <assignment to="enumValDef" constant="60" />
            <assignment to="structMinimal.i16Val" from="MinimalSignal.i16Val" />
            <assignment to="structMinimal.i32Val" from="InSignal.structMinimal.i32Val" />
            <assignment to="structMinimal.i64Val" from="InSignal.structMinimal.ui32Val" />
            <assignment to="i8Ary" from="InSignal.i8Ary" transformation="add2" />
            <assignment to="structMinimalAry[0]" from="MinimalSignal" />
            <assignment to="ui64Val" function="simulation_time()" />
            <assignment to="ui32Val" function="trigger_counter()" />
            <assignment to="bVal" function="received(MinimalSignal)" />

            <trigger type="signal" variable="InSignal" />
            <trigger type="data" variable="MinimalSignal.i32Val" operator="less_than" value="2" />
        </target>

        <target name="OutSignal2" type="OutStruct">
            <assignment to="i16Val" constant="3" />
            <assignment to="ui16Val" from="MinimalSignal.f32Val" transformation="add2" />
            <assignment to="structMinimalAry[0]" from="MinimalSignal2" />
            <assignment to="i8Ary" from="InSignal.f32Ary" transformation="add2" />
            <assignment to="enumVal" from="InSignal.enumVal" transformation="pixelTable" />
            <assignment to="enumVal2" from="InSignal.enumVal" transformation="enumTable" />
        </target>

        <target name="OutSignal3" type="OutStruct">
            <assignment to="ui32Val" function="trigger_counter(5)" />
            <trigger type="signal" variable="InSignal" />
            <trigger type="data" variable="MinimalSignal.i32Val" operator="equal" value="-1.0" />
            <trigger type="data" variable="MinimalSignal.i32Val" operator="not_equal" value="2" />
            <trigger type="data" variable="MinimalSignal.i32Val" operator="less_than" value="3" />
            <trigger type="data" variable="MinimalSignal.i32Val" operator="less_than_equal" value="3" />
            <trigger type="data" variable="MinimalSignal.i32Val" operator="greater_than" value="4" />
            <trigger type="data" variable="MinimalSignal.i32Val" operator="greater_than_equal" value="4" />
        </target>
    </targets>

    <transformations>
        <polynomial name="add2" a="2" b="1" />
        <enum_table name="pixelTable" from="tPixelFormat" to="tPixelFormat" default="PF_UNKNOWN" >
            <conversion from="PF_16BIT" to="PF_8BIT" />
            <conversion from="PF_24BIT" to="PF_24BIT" />
            <conversion from="PF_32BIT" to="PF_24BIT" />
            <conversion from="PF_8BIT" to="PF_8BIT" />
            <conversion from="PF_ABGR_4444" to="PF_BGR_555" />
            <conversion from="PF_ABGR_8888" to="PF_BGR_565" />
        </enum_table>
        <enum_table name="enumTable" from="tPixelFormat" to="tTestEnum" default="C" >
            <conversion from="PF_16BIT" to="A" />
            <conversion from="PF_24BIT" to="B" />
        </enum_table>
    </transformations>
</mapping>